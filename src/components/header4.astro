---
import { Icon } from "astro-icon";
const allPosts = await Astro.glob("../pages/post/**/*.mdx"); // Adjust the path if necessary
const tags = [
  ...new Set(allPosts.flatMap((post) => post.frontmatter.tags || [])),
];

// Limit to the first 12 tags
const limitedTags = tags.slice(0, 12);
---

<nav
  class="dark:border-black-700 sticky top-0 border-zinc-950 px-3 text-white dark:bg-zinc-950"
>
  <div
    class="container mx-auto flex max-w-6xl flex-wrap items-center justify-between"
  >
    <!-- Logo -->
    <div class="flex w-full items-center justify-between md:w-auto">
      <Icon name="ebikenook" class="h-10" />
      <a href="/" class="flex-1 px-2 py-3 font-semibold text-white">ebikenook</a
      >

      <!-- Mobile menu icon -->
      <div class="flex items-center md:hidden">
        <button type="button" class="mobile-menu-button">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="h-6 w-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Desktop Navigation -->
    <div
      class="navigation-menu hidden flex-col items-center justify-start pb-3 font-semibold text-3xl sm:text-sm md:flex md:flex-row md:space-x-1 md:pb-0"
    >
      <a href="/" class="block px-3 py-2 text-zinc-600">Home</a>
      <a href="/products" class="block px-3 py-2">E-Vault</a>
      <a href="/post" class="block px-3 py-2">Electric Pulse</a>
      <a href="/guides" class="block px-3 py-2">Guides</a>
      <a href="https://gearwelt.com/" target="_blank" class="block px-3 py-2"
        >GearWelt</a
      >

      <!-- Plus Icon (Visible in both mobile and non-mobile) -->
      <button id="open-menu" class="font-semibold text-white text-xl md:ml-6"
        >+</button
      >
    </div>
  </div>
</nav>

<!-- Side Menu (Hidden by default, appears when "+" is clicked) -->
<div
  id="side-menu"
  class="fixed right-0 top-0 h-full w-0 max-w-[14.2857vw] bg-zinc-950 transition-all duration-300 ease-in-out"
>
  <div class="mt-16 flex justify-end p-4">
    <button id="close-menu" class="hidden font-bold text-white text-4xl"
      >&times;</button
    >
  </div>
  <div class="flex flex-col space-y-6 px-6 text-white text-xl">
    <!-- Displaying tags in the side menu -->
    {
      limitedTags.map((tag) => (
        <a href={`/tags/${tag}`} class="block border-b border-zinc-700 py-3">
          {tag}
        </a>
      ))
    }
  </div>
</div>

<style>
  .navigation-menu a {
    text-decoration: none;
    background-image: linear-gradient(#6366f1, #d946ef);
    background-size: 0% 0.1em;
    background-position-y: 100%;
    background-position-x: 0%;
    background-repeat: no-repeat;
    transition: background-size 0.5s ease-in-out;
  }

  .navigation-menu a:hover,
  .navigation-menu a:focus,
  .navigation-menu a:active {
    background-size: 100% 0.1em;
    color: #818cf8;
  }

  /* Side Menu Open/Close */
  #side-menu {
    @apply w-0;
  }

  #side-menu.open {
    @apply w-full;
  }

  /* Mobile Specific Styling for the side menu */
  @media (max-width: 768px) {
    #side-menu.open {
      @apply max-w-full;
    }

    /* Align navigation menu items to the right on mobile */
    .navigation-menu {
      justify-content: flex-end; /* Align items to the right */
      width: 100%; /* Ensure the navigation menu takes full width on mobile */
    }

    /* Stack the links vertically and align them to the right */
    .navigation-menu a {
      text-align: right;
      width: 100%;
      padding-right: 16px; /* Add some padding to the right */
      border-bottom: 2px solid #ccc; /* Add a horizontal line under each link */
    }

    /* Optional: Style the border line color for better visibility */
    .navigation-menu a:hover {
      border-bottom-color: #6366f1; /* Change the border color on hover */
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.querySelector(".mobile-menu-button");
  const mobileMenu = document.querySelector(".navigation-menu");
  mobileMenuButton.addEventListener("click", () => {
    mobileMenu.classList.toggle("hidden");
  });

  // Open the side menu
  document.getElementById("open-menu").addEventListener("click", () => {
    const sideMenu = document.getElementById("side-menu");
    const navigationMenu = document.querySelector(".navigation-menu");

    sideMenu.classList.add("open");
    document.getElementById("close-menu").classList.remove("hidden"); // Show close button

    // Toggle the navigation menu visibility to make room for the side menu
    navigationMenu.classList.toggle("open");
  });

  // Close the side menu
  document.getElementById("close-menu").addEventListener("click", () => {
    const sideMenu = document.getElementById("side-menu");
    const navigationMenu = document.querySelector(".navigation-menu");

    sideMenu.classList.remove("open");
    document.getElementById("close-menu").classList.add("hidden"); // Hide close button

    // Close the navigation menu to reset the layout
    navigationMenu.classList.remove("open");
  });

  // Dropdown functionality
  const dropdownToggles = document.querySelectorAll(".dropdown-toggle");

  dropdownToggles.forEach((toggle) => {
    toggle.addEventListener("click", () => {
      const dropdownMenu = toggle.nextElementSibling;
      dropdownMenu.classList.toggle("hidden");
    });
  });

  // Close dropdown if clicked outside
  window.addEventListener("click", function (e) {
    if (!e.target.matches(".dropdown-toggle")) {
      document.querySelectorAll(".dropdown-menu").forEach((menu) => {
        if (!menu.contains(e.target)) {
          menu.classList.add("hidden");
        }
      });
    }
  });
</script>
