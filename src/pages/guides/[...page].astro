---
import BlogLayout from "../../layouts/BlogLayout.astro";
import { Pagination } from "accessible-astro-components";

export async function getStaticPaths({ paginate }) {
const post = await Astro.glob("./*.mdx");
return paginate(post, { pageSize: 6 });
}

const { page } = Astro.props;
---

<BlogLayout title="Guides and Tutorials"
  description="Our electric bike guides feature comparisons, tutorials, and deep dives into components, accessories, and maintenance â€” made for both beginners and experienced riders alike.">
  <section class="max-w-7xl mx-auto px-6 py-10 text-gray-200 bg-zinc-900">



    <!-- Post Range Info -->
    <p class="text-sm text-gray-400 italic mb-4">
      Showing posts {page.start + 1} to {page.end + 1} of {page.total}
    </p>

    <!-- Posts Grid -->
    <ul class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {page.data.map((post) => (
      <li key={post.frontmatter.slug}
        class="rounded-lg bg-zinc-800 shadow hover:shadow-xl transition-shadow duration-300">
        <a href={"/guides/" + post.frontmatter.slug} class="flex flex-col h-full p-4 space-y-3 group">

          <img src={post.frontmatter.image} alt={post.frontmatter.title} loading="lazy"
            class="rounded-md h-40 w-full object-cover group-hover:scale-105 transition-transform duration-300" />

          <div class="flex flex-col flex-grow">
            <h2 class="text-lg font-bold text-white mb-1 group-hover:text-fuchsia-400 transition-colors">
              {post.frontmatter.title}
            </h2>
            <p class="text-fuchsia-300 text-sm line-clamp-2">{post.frontmatter.description}</p>
            <p class="text-gray-400 text-xs mt-1 line-clamp-3">{post.frontmatter.excerpt}</p>
          </div>

          <div class="text-xs text-gray-500 mt-auto flex items-center gap-2">
            <span>&#10711; {post.frontmatter.minutesRead} min read</span>
          </div>
        </a>
      </li>
      ))}
    </ul>

    <!-- Pagination -->
    <div class="mt-10 flex justify-center">
      <Pagination firstPage={page.url.prev ? "/guides" : null} previousPage={page.url.prev} nextPage={page.url.next}
        lastPage={ page.url.next ? `/guides/${Math.ceil(page.total / page.size)}` : null }
        currentPage={page.currentPage} totalPages={Math.ceil(page.total / page.size)} />
    </div>
  </section>
</BlogLayout>